/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 13.5 		*/
/*  Created On : 03-Jan-2019 2:37:21 AM 				*/
/*  DBMS       : SQL Server 2008 						*/
/* ---------------------------------------------------- */



/* Drop Foreign Key Constraints */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Application_Property]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Application] DROP CONSTRAINT [FK_Application_Property]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Application_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Application] DROP CONSTRAINT [FK_Application_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Backup_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Backup] DROP CONSTRAINT [FK_Backup_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Bid_Application]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Bid] DROP CONSTRAINT [FK_Bid_Application]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_FeatureProperty_Feature]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [FeatureProperty] DROP CONSTRAINT [FK_FeatureProperty_Feature]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Message_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Message] DROP CONSTRAINT [FK_Message_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Message_User_02]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Message] DROP CONSTRAINT [FK_Message_User_02]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Payment_Bid]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Payment] DROP CONSTRAINT [FK_Payment_Bid]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Payment_Payment_Type]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Payment] DROP CONSTRAINT [FK_Payment_Payment_Type]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Payment_PaymentStatus]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Payment] DROP CONSTRAINT [FK_Payment_PaymentStatus]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Property_Location]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Property] DROP CONSTRAINT [FK_Property_Location]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Property_PropertyStatus]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Property] DROP CONSTRAINT [FK_Property_PropertyStatus]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Service_User_Service]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Service_User] DROP CONSTRAINT [FK_Service_User_Service]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Service_User_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Service_User] DROP CONSTRAINT [FK_Service_User_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Role]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [User] DROP CONSTRAINT [FK_User_Role]
GO

/* Drop Tables */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Application]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Application]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Backup]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Backup]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Bid]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Bid]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Feature]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Feature]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FeatureProperty]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [FeatureProperty]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Location]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Location]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Message]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Message]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Payment]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Payment]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Payment_Type]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Payment_Type]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[PaymentStatus]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [PaymentStatus]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Property]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Property]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[PropertyStatus]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [PropertyStatus]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Role]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Role]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Service]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Service]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Service_User]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Service_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[User]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [User]
GO

/* Create Tables */

CREATE TABLE [Application]
(
	[Id] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[Property_Id] int NOT NULL,
	[Date] varchar(250) NOT NULL,
	[User_Id] int NOT NULL
)
GO

CREATE TABLE [Backup]
(
	[Backup_id] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[Date] varchar(250) NOT NULL,
	[Size] varchar(250) NOT NULL,
	[User_id] int NOT NULL
)
GO

CREATE TABLE [Bid]
(
	[Id] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[Amount] varchar(250) NOT NULL,
	[Application_Id] int NOT NULL,
	[Date] varchar(250) NOT NULL
)
GO

CREATE TABLE [Feature]
(
	[FeatureId] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[FeatureName] varchar(250) NOT NULL,
	[FeatureDescription] text NULL
)
GO

CREATE TABLE [FeatureProperty]
(
	[PropertyId] int NOT NULL,
	[FeatureId] int NOT NULL
)
GO

CREATE TABLE [Location]
(
	[id] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[Name] varchar(250) NOT NULL,
	[Sid] int NULL
)
GO

CREATE TABLE [Message]
(
	[Id] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[Sender_Id] int NOT NULL,
	[Reciver_Id] int NOT NULL,
	[Date] varchar(250) NULL,
	[Importance] varchar(250) NULL,
	[Subject] text NULL,
	[Body] text NULL
)
GO

CREATE TABLE [Payment]
(
	[Id] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[Payment_Type] int NOT NULL,
	[Date] varchar(250) NOT NULL,
	[Bid_Id] int NOT NULL,
	[PaymentStatusId] int NULL
)
GO

CREATE TABLE [Payment_Type]
(
	[Id] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[Name] varchar(250) NOT NULL,
	[Descreption] text NOT NULL
)
GO

CREATE TABLE [PaymentStatus]
(
	[PaymentStatusId] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[PaymentStatusName] varchar(250) NOT NULL
)
GO

CREATE TABLE [Property]
(
	[Id] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[Location_Id] int NULL,
	[name] varchar(250) NULL,
	[Agent_Id] int NULL,
	[Price] varchar(250) NULL,
	[Descreption] text NULL,
	[PropertyStatusId] int NULL
)
GO

CREATE TABLE [PropertyStatus]
(
	[PropertyStatusId] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[PropertyStatusName] varchar(250) NOT NULL
)
GO

CREATE TABLE [Role]
(
	[role_id] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[role_name] varchar(250) NOT NULL,
	[role_descreption] text NULL
)
GO

CREATE TABLE [Service]
(
	[Id] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[Name] varchar(250) NOT NULL,
	[Descreption] text NOT NULL
)
GO

CREATE TABLE [Service_User]
(
	[Service_Id] int NOT NULL,
	[User_Id] int NOT NULL
)
GO

CREATE TABLE [User]
(
	[Id] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[Name] varchar(250) NOT NULL,
	[DOB] varchar(250) NULL,
	[Email] varchar(250) NOT NULL,
	[Phone] varchar(250) NULL,
	[Address] text NULL,
	[Username] varchar(250) NOT NULL,
	[Password] varchar(250) NOT NULL,
	[role_Id] int NULL,
	[Commission] varchar(250) NULL,
	[CPR] varchar(250) NOT NULL
)
GO

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [Application] 
 ADD CONSTRAINT [PK_Application]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Application_Property] 
 ON [Application] ([Property_Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Application_User] 
 ON [Application] ([User_Id] ASC)
GO

ALTER TABLE [Backup] 
 ADD CONSTRAINT [PK_Backup]
	PRIMARY KEY CLUSTERED ([Backup_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Backup_User] 
 ON [Backup] ([User_id] ASC)
GO

ALTER TABLE [Bid] 
 ADD CONSTRAINT [PK_Bid]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Bid_Application] 
 ON [Bid] ([Application_Id] ASC)
GO

ALTER TABLE [Feature] 
 ADD CONSTRAINT [PK_Feature]
	PRIMARY KEY CLUSTERED ([FeatureId] ASC)
GO

ALTER TABLE [FeatureProperty] 
 ADD CONSTRAINT [PK_FeatureProperty]
	PRIMARY KEY CLUSTERED ([PropertyId] ASC,[FeatureId] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_FeatureProperty_Feature] 
 ON [FeatureProperty] ([FeatureId] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_FeatureProperty_Property] 
 ON [FeatureProperty] ([PropertyId] ASC)
GO

ALTER TABLE [Location] 
 ADD CONSTRAINT [PK_Location]
	PRIMARY KEY CLUSTERED ([id] ASC)
GO

ALTER TABLE [Message] 
 ADD CONSTRAINT [PK_Message]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Message_User] 
 ON [Message] ([Sender_Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Message_User_02] 
 ON [Message] ([Reciver_Id] ASC)
GO

ALTER TABLE [Payment] 
 ADD CONSTRAINT [PK_Payment]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Payment_Bid] 
 ON [Payment] ([Bid_Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Payment_Payment_Type] 
 ON [Payment] ([Payment_Type] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Payment_PaymentStatus] 
 ON [Payment] ([PaymentStatusId] ASC)
GO

ALTER TABLE [Payment_Type] 
 ADD CONSTRAINT [PK_Payment_Type]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

ALTER TABLE [PaymentStatus] 
 ADD CONSTRAINT [PK_PaymentStatus]
	PRIMARY KEY CLUSTERED ([PaymentStatusId] ASC)
GO

ALTER TABLE [Property] 
 ADD CONSTRAINT [PK_Property]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Property_Location] 
 ON [Property] ([Location_Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Property_PropertyStatus] 
 ON [Property] ([PropertyStatusId] ASC)
GO

ALTER TABLE [PropertyStatus] 
 ADD CONSTRAINT [PK_PropertyStatus]
	PRIMARY KEY CLUSTERED ([PropertyStatusId] ASC)
GO

ALTER TABLE [Role] 
 ADD CONSTRAINT [PK_Role]
	PRIMARY KEY CLUSTERED ([role_id] ASC)
GO

ALTER TABLE [Service] 
 ADD CONSTRAINT [PK_Service]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

ALTER TABLE [Service_User] 
 ADD CONSTRAINT [PK_Service_User]
	PRIMARY KEY CLUSTERED ([Service_Id] ASC,[User_Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Service_User_Service] 
 ON [Service_User] ([Service_Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Service_User_User] 
 ON [Service_User] ([User_Id] ASC)
GO

ALTER TABLE [User] 
 ADD CONSTRAINT [PK_User]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Role] 
 ON [User] ([role_Id] ASC)
GO

/* Create Foreign Key Constraints */

ALTER TABLE [Application] ADD CONSTRAINT [FK_Application_Property]
	FOREIGN KEY ([Property_Id]) REFERENCES [Property] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Application] ADD CONSTRAINT [FK_Application_User]
	FOREIGN KEY ([User_Id]) REFERENCES [User] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Backup] ADD CONSTRAINT [FK_Backup_User]
	FOREIGN KEY ([User_id]) REFERENCES [User] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Bid] ADD CONSTRAINT [FK_Bid_Application]
	FOREIGN KEY ([Application_Id]) REFERENCES [Application] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [FeatureProperty] ADD CONSTRAINT [FK_FeatureProperty_Feature]
	FOREIGN KEY ([FeatureId]) REFERENCES [Feature] ([FeatureId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Message] ADD CONSTRAINT [FK_Message_User]
	FOREIGN KEY ([Sender_Id]) REFERENCES [User] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Message] ADD CONSTRAINT [FK_Message_User_02]
	FOREIGN KEY ([Reciver_Id]) REFERENCES [User] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Payment] ADD CONSTRAINT [FK_Payment_Bid]
	FOREIGN KEY ([Bid_Id]) REFERENCES [Bid] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Payment] ADD CONSTRAINT [FK_Payment_Payment_Type]
	FOREIGN KEY ([Payment_Type]) REFERENCES [Payment_Type] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Payment] ADD CONSTRAINT [FK_Payment_PaymentStatus]
	FOREIGN KEY ([PaymentStatusId]) REFERENCES [PaymentStatus] ([PaymentStatusId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Property] ADD CONSTRAINT [FK_Property_Location]
	FOREIGN KEY ([Location_Id]) REFERENCES [Location] ([id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Property] ADD CONSTRAINT [FK_Property_PropertyStatus]
	FOREIGN KEY ([PropertyStatusId]) REFERENCES [PropertyStatus] ([PropertyStatusId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Service_User] ADD CONSTRAINT [FK_Service_User_Service]
	FOREIGN KEY ([Service_Id]) REFERENCES [Service] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Service_User] ADD CONSTRAINT [FK_Service_User_User]
	FOREIGN KEY ([User_Id]) REFERENCES [User] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [User] ADD CONSTRAINT [FK_User_Role]
	FOREIGN KEY ([role_Id]) REFERENCES [Role] ([role_id]) ON DELETE No Action ON UPDATE No Action
GO
